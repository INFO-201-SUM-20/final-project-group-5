m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
plot(m)
m %>% addPolygons()
m %>% addPolygons(
fillColor = 'red',
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
View(states)
View(states)
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
render_leaf_plot <- function(df){
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
return(leaf_plot)
}
m
plot(m)
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
plot(m)
render_leaf_plot <- function(df){
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
return(leaf_plot)
}
m
m
plot(m)
m
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m
render_leaf_plot <- function(df){
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
return(leaf_plot)
}
m %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m <- m %>% addPolygons(
fillColor = color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
m <- m %>% addPolygons(
fillColor = color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m
render_leaf_plot <- function(df){
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
return(leaf_plot)
}
m <- m %>% addPolygons(
fillColor = ~color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m <- m %>% addPolygons(
fillColor = ~color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
create_color <- function(color){
if(color == "red"){
return('red')
}else{
return('blue')
}
}
m <- m %>% addPolygons(
fillColor = ~color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m
render_leaf_plot <- function(df){
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
return(leaf_plot)
}
?addCircles
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
render_leaf_plot <- function(df){
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
create_color <- function(color){
if(color == "red"){
return('red')
}else{
return('blue')
}
}
m <- m %>% addPolygons(
fillColor = ~color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m %>%
addCircles(
data = df
)
return(leaf_plot)
}
new_data <- states %>% outer_join(df)
new_data <- states %>% full_join(df)
m <- leaflet() %>%
setView(-96, 37.8, 4) %>%
addTiles(data = states, "MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m %>%
addCircles(
data = df,
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
)
m %>%
addCircles(
data = df,
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
)
library('dplyr')
library('ggplot2')
library('leaflet')
library('shiny')
library('geojsonio')
render_leaf_plot <- function(df){
csv <- read.csv('data/time_series_covid19_confirmed_US.csv', stringsAsFactors =
FALSE)
covid_data <- df %>%
select(Province_State, Lat, Long_, X8.5.20, Combined_Key) %>%
filter(X8.5.20 > 100)
leaf_plot <- leaflet(data = covid_data) %>%
addProviderTiles('CartoDB.Positron') %>%
setView(lng = -122.3321, lat = 47.6062, zoom = 5) %>%
addCircles(
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
) %>%
addLayersControl(overlayGroups = c("Red","Blue") , baseGroups = c("background 1","background 2"),
options = layersControlOptions(collapsed = FALSE))
states <- geojsonio::geojson_read("data/us-states.json", what = "sp")
m <- leaflet() %>%
setView(-96, 37.8, 4) %>%
addTiles(data = states, "MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states$density
) %>% lapply(htmltools::HTML)
create_color <- function(color){
if(color == "red"){
return('red')
}else{
return('blue')
}
}
m <- m %>% addPolygons(
fillColor = ~color,
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.5,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m %>% addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m %>%
addCircles(
data = df,
lat = ~Lat,
lng = ~Long_,
radius = ~X8.5.20,
popup =  ~paste(Combined_Key, '<br/>', 'Total cases: ', X8.5.20),
color = 'pink', fillOpacity = 0.7
)
return(m)
}
m <- leaflet() %>%
setView(-96, 37.8, 4) %>%
addTiles(data = states, "MapBox", options = providerTileOptions(
data = states,
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
plot2 <- ggplotly(ggplot(df, ) +
geom_line(aes(x = formatDate, y = Close), colour="#ff7900") +
xlab('US DOW JONES Performance'))
